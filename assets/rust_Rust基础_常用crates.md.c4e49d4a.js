import{_ as e,c as a,o as r,d as t}from"./app.06e3ecf5.js";const f=JSON.parse('{"title":"常用 crates","description":"","frontmatter":{"title":"常用 crates"},"headers":[{"level":3,"title":"crate.io","slug":"crate-io","link":"#crate-io","children":[]},{"level":3,"title":"错误处理","slug":"错误处理","link":"#错误处理","children":[]},{"level":3,"title":"时间和日期处理","slug":"时间和日期处理","link":"#时间和日期处理","children":[]},{"level":3,"title":"网络请求","slug":"网络请求","link":"#网络请求","children":[]},{"level":3,"title":"数字处理","slug":"数字处理","link":"#数字处理","children":[]},{"level":3,"title":"命令行","slug":"命令行","link":"#命令行","children":[]}],"relativePath":"rust/Rust基础/常用crates.md","lastUpdated":1673171268000}'),l={name:"rust/Rust基础/常用crates.md"},i=t('<h3 id="crate-io" tabindex="-1"><a href="http://crate.io" target="_blank" rel="noreferrer">crate.io</a> <a class="header-anchor" href="#crate-io" aria-hidden="true">#</a></h3><p>Rust 搜索开发包的地方，类似于 NPM，<a href="https://crates.io/" target="_blank" rel="noreferrer">Rust crate.io</a></p><h3 id="错误处理" tabindex="-1">错误处理 <a class="header-anchor" href="#错误处理" aria-hidden="true">#</a></h3><ul><li>thiserror</li><li>anyhow</li></ul><p>如果你想要设计自己的错误类型，同时给调用者提供具体的信息时，就使用 <code>thiserror</code>; 当你在开发一个三方库代码时或者自己应用中使用，就使用 <code>anyhow</code></p><h3 id="时间和日期处理" tabindex="-1">时间和日期处理 <a class="header-anchor" href="#时间和日期处理" aria-hidden="true">#</a></h3><ul><li>chrono</li></ul><h3 id="网络请求" tabindex="-1">网络请求 <a class="header-anchor" href="#网络请求" aria-hidden="true">#</a></h3><ul><li>reqwest</li></ul><h3 id="数字处理" tabindex="-1">数字处理 <a class="header-anchor" href="#数字处理" aria-hidden="true">#</a></h3><ul><li>num</li><li>rand 随机数</li></ul><h3 id="命令行" tabindex="-1">命令行 <a class="header-anchor" href="#命令行" aria-hidden="true">#</a></h3><ul><li>clap 以声明方式或过程方式创建带有所有附加功能的命令行解析器</li></ul>',13),c=[i];function n(d,h,s,o,u,_){return r(),a("div",null,c)}const k=e(l,[["render",n]]);export{f as __pageData,k as default};
