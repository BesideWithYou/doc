import{_ as a,c as e,o as t,N as r}from"./chunks/framework.3202de66.js";const f=JSON.parse('{"title":"常用 crates","description":"","frontmatter":{"title":"常用 crates"},"headers":[],"relativePath":"rust/Rust基础/1.常用crates.md","lastUpdated":1673538831000}'),o={name:"rust/Rust基础/1.常用crates.md"},l=r('<h2 id="crate-io" tabindex="-1">crate.io <a class="header-anchor" href="#crate-io" aria-label="Permalink to &quot;crate.io&quot;">​</a></h2><p>Rust 包管理网站，类似于 NPM，<a href="https://crates.io/" target="_blank" rel="noreferrer">Rust crate.io</a></p><h2 id="错误处理" tabindex="-1">错误处理 <a class="header-anchor" href="#错误处理" aria-label="Permalink to &quot;错误处理&quot;">​</a></h2><ul><li>thiserror</li><li>anyhow</li></ul><p>如果你想要设计自己的错误类型，同时给调用者提供具体的信息时，就使用 <code>thiserror</code>; 当你在开发一个三方库代码时或者自己应用中使用，就使用 <code>anyhow</code></p><h2 id="时间和日期处理" tabindex="-1">时间和日期处理 <a class="header-anchor" href="#时间和日期处理" aria-label="Permalink to &quot;时间和日期处理&quot;">​</a></h2><ul><li>chrono</li></ul><h2 id="网络请求" tabindex="-1">网络请求 <a class="header-anchor" href="#网络请求" aria-label="Permalink to &quot;网络请求&quot;">​</a></h2><ul><li>reqwest</li></ul><h2 id="数字处理" tabindex="-1">数字处理 <a class="header-anchor" href="#数字处理" aria-label="Permalink to &quot;数字处理&quot;">​</a></h2><ul><li>num</li><li>rand 随机数</li></ul><h2 id="命令行" tabindex="-1">命令行 <a class="header-anchor" href="#命令行" aria-label="Permalink to &quot;命令行&quot;">​</a></h2><ul><li>clap 以声明方式或过程方式创建带有所有附加功能的命令行解析器</li></ul>',13),i=[l];function s(c,n,h,d,u,_){return t(),e("div",null,i)}const m=a(o,[["render",s]]);export{f as __pageData,m as default};
