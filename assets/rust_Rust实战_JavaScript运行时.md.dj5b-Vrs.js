import{_ as a,o as s,c as e,R as t}from"./chunks/framework.Cb3GRYqX.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"rust/Rust实战/JavaScript运行时.md","filePath":"rust/Rust实战/JavaScript运行时.md","lastUpdated":1691338854000}'),i={name:"rust/Rust实战/JavaScript运行时.md"},r=t('<h2 id="构建自己的-javascript-运行时" tabindex="-1">构建自己的 JavaScript 运行时 <a class="header-anchor" href="#构建自己的-javascript-运行时" aria-label="Permalink to &quot;构建自己的 JavaScript 运行时&quot;">​</a></h2><blockquote><p>运行时指的是程序在执行过程中的运行阶段。在程序编写完成后，需要将代码交给计算机进行执行，而这时候程序就需要一个运行环境来支持其运行，比如说我们 JS 本身有一些 API 不支持，比如读写文件， Node.js 这个运行时就可以提供 JS 这个能力，然后在 JS 运行代码的阶段就会去拿到 Node.js 提供的这些 API 来运行</p></blockquote><p>本篇文章会带你构建一个可以自己定制化的 JavaScript 运行时，现在市面上流行的 Js 运行时有 3 个，分别是：</p><ul><li>Node.js</li><li>Deno</li><li>Bun</li></ul><p>当然目前使用人数最多的还是 Node.js，它是用 C++ 编写的；其次是 Deno，已经发布了正式版，它是使用 Rust 编写的；最后是 Bun，目前还没发布正式版，它是使用 Zig 语言编写的。</p><p>当然本篇中我们会使用 Rust 去编写一个简单的 Js 运行时，我们会直接去用到 Deno 提供的一些能力，方便我们快速进行开发。</p><h2 id="创建项目" tabindex="-1">创建项目 <a class="header-anchor" href="#创建项目" aria-label="Permalink to &quot;创建项目&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> runjs</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>',8),n=[r];function o(p,l,c,d,h,u){return s(),e("div",null,n)}const v=a(i,[["render",o]]);export{k as __pageData,v as default};
