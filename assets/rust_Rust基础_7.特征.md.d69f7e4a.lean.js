import{_ as s,c as n,o as a,d as l}from"./app.fa961a71.js";const A=JSON.parse('{"title":"特征","description":"","frontmatter":{"title":"特征"},"headers":[{"level":2,"title":"Trait(特征)","slug":"trait-特征","link":"#trait-特征","children":[]},{"level":2,"title":"定义 Trait","slug":"定义-trait","link":"#定义-trait","children":[]},{"level":2,"title":"在类型上实现 Trait","slug":"在类型上实现-trait","link":"#在类型上实现-trait","children":[]},{"level":2,"title":"实现 trait 的约束","slug":"实现-trait-的约束","link":"#实现-trait-的约束","children":[]},{"level":2,"title":"默认实现","slug":"默认实现","link":"#默认实现","children":[]},{"level":2,"title":"把 Trait 作为函数参数","slug":"把-trait-作为函数参数","link":"#把-trait-作为函数参数","children":[]},{"level":2,"title":"实现了的 Trait 作为返回类型","slug":"实现了的-trait-作为返回类型","link":"#实现了的-trait-作为返回类型","children":[{"level":3,"title":"看个例子，获取数组里的最大的一项","slug":"看个例子-获取数组里的最大的一项","link":"#看个例子-获取数组里的最大的一项","children":[]}]},{"level":2,"title":"使用 Trait Bound 有条件的实现方法","slug":"使用-trait-bound-有条件的实现方法","link":"#使用-trait-bound-有条件的实现方法","children":[]},{"level":2,"title":"常用 Trait","slug":"常用-trait","link":"#常用-trait","children":[]},{"level":2,"title":"内存 Trait","slug":"内存-trait","link":"#内存-trait","children":[]},{"level":2,"title":"标记 Ttrait","slug":"标记-ttrait","link":"#标记-ttrait","children":[]},{"level":2,"title":"类型转换 Trait","slug":"类型转换-trait","link":"#类型转换-trait","children":[]},{"level":2,"title":"操作符 Trait","slug":"操作符-trait","link":"#操作符-trait","children":[]},{"level":2,"title":"其它 Trait","slug":"其它-trait","link":"#其它-trait","children":[]}],"relativePath":"rust/Rust基础/7.特征.md","lastUpdated":1673538831000}'),p={name:"rust/Rust基础/7.特征.md"},o=l("",52),e=[o];function r(t,c,F,D,y,C){return a(),n("div",null,e)}const b=s(p,[["render",r]]);export{A as __pageData,b as default};
